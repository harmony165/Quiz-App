{"ast":null,"code":"var _jsxFileName = \"/Users/kau/Desktop/GeoGo/Internship/Assignments/quiz/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Init from './container/Init/Init';\nimport Play from './container/Play/Play';\nimport Result from './component/Result/Result';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getUrl = async () => {\n      if (this.state.token !== '') {\n        this.getToken();\n      }\n\n      let url = \"https://opentdb.com/api.php?amount=10&type=multiple&token=\".concat(this.state.token, \"&encode=url3986\");\n      let res = await axios.get(url);\n\n      if (res.data.results) {\n        let questions = res.data.results.map(q => {\n          let opt = q.incorrect_answers;\n          opt.push(q.correct_answer);\n          return {\n            question: q.question,\n            correctAns: q.correct_answer,\n            options: this.shuffle(opt)\n          };\n        });\n        this.setState({\n          questions,\n          page: 'play',\n          spinner: false\n        });\n      }\n    };\n\n    this.state = {\n      page: 'init',\n      spinner: false,\n      questions: {},\n      level: 1,\n      passed: false,\n      token: ''\n    };\n  }\n\n  shuffle(a) {\n    return a.sort(() => Math.random() - 0.5);\n  }\n\n  start() {\n    this.setState({\n      spinner: !this.state.spinner\n    });\n    setTimeout(() => {\n      this.getUrl();\n    }, 300);\n  }\n\n  async getToken() {\n    await axios.get('https://opentdb.com/api_token.php?command=request').then(res => {\n      this.setState({\n        token: res.data.token\n      });\n      console.log(this.state.token);\n    });\n  }\n\n  finished(a) {\n    if (a === 'pass') {\n      this.setState({\n        page: 'result',\n        passed: true\n      });\n    } else if (a === 'fail') {\n      this.setState({\n        page: 'result'\n      });\n    }\n  }\n\n  play() {\n    this.getUrl();\n  }\n\n  render() {\n    let page = this.state.page === 'init' ? React.createElement(Init, {\n      click: a => this.start(a),\n      spinner: this.state.spinner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }) : this.state.page === 'play' ? React.createElement(Play, {\n      questions: this.state.questions,\n      level: this.state.level,\n      finished: a => this.finished(a),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }) : this.state.page === 'result' ? React.createElement(Result, {\n      pass: this.state.passed,\n      play: () => this.play(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }) : null;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, page));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kau/Desktop/GeoGo/Internship/Assignments/quiz/src/App.js"],"names":["React","Component","axios","Init","Play","Result","App","constructor","getUrl","state","token","getToken","url","res","get","data","results","questions","map","q","opt","incorrect_answers","push","correct_answer","question","correctAns","options","shuffle","setState","page","spinner","level","passed","a","sort","Math","random","start","setTimeout","then","console","log","finished","play","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\nimport './App.css';\n\n\nimport Init from './container/Init/Init'\nimport Play from './container/Play/Play'\nimport Result from './component/Result/Result'\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      page: 'init',\n      spinner: false,\n      questions: {},\n      level: 1,\n      passed: false,\n      token: ''\n    }\n  }\n\n  shuffle(a) {\n    return a.sort(() => Math.random() - 0.5)\n  }\n\n  start (){\n    this.setState({spinner: !this.state.spinner})\n    setTimeout(()=>{\n      this.getUrl()  \n    }, 300)\n  }\n    \n  async getToken(){\n    await axios.get('https://opentdb.com/api_token.php?command=request')\n      .then(res => {\n        this.setState({token: res.data.token})\n        console.log(this.state.token)\n      })\n  }\n\n  getUrl = async () => {\n    if(this.state.token !== ''){\n      this.getToken()\n    }\n    \n    \n    let url = `https://opentdb.com/api.php?amount=10&type=multiple&token=${this.state.token}&encode=url3986`\n    \n    let res = await axios.get(url)\n    \n    if (res.data.results) {\n      let questions = res.data.results.map((q)=>{\n        let opt = q.incorrect_answers\n        opt.push(q.correct_answer)\n        return {\n          question: q.question,\n          correctAns: q.correct_answer,\n          options: this.shuffle(opt)\n        }\n      })\n      this.setState({\n        questions,\n        page: 'play',\n        spinner: false\n      })\n    }\n  }\n\n  finished(a){\n    if(a === 'pass') {\n      this.setState({page: 'result', passed: true})\n    } else if(a === 'fail'){\n      this.setState({page: 'result'})\n    }\n  }\n\n  play(){\n    this.getUrl()\n  }\n\n  render(){\n    let page = this.state.page === 'init' ? \n                  <Init \n                    click={(a)=>this.start(a)}\n                    spinner={this.state.spinner} /> : \n                    \n               this.state.page === 'play' ?\n                  <Play \n                    questions={this.state.questions}\n                    level={this.state.level}\n                    finished={(a)=>this.finished(a)} /> : \n\n               this.state.page === 'result' ? \n                  <Result \n                    pass={this.state.passed}\n                    play={()=>this.play()}/> : null\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          {page}\n      </div>\n    </div>\n  )}\n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}